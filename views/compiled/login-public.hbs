<?php return function ($in, $debugopt = 1) {
    $cx = array(
        'flags' => array(
            'jstrue' => false,
            'jsobj' => false,
            'spvar' => true,
            'prop' => false,
            'method' => false,
            'mustlok' => false,
            'echo' => false,
            'debug' => $debugopt,
        ),
        'constants' =>  array(
            'DEBUG_ERROR_LOG' => 1,
            'DEBUG_ERROR_EXCEPTION' => 2,
            'DEBUG_TAGS' => 4,
            'DEBUG_TAGS_ANSI' => 12,
            'DEBUG_TAGS_HTML' => 20,
        ),
        'helpers' => array(            'select_equals' => function($args) {
          return $args[0] == $args[1] ? "selected" : "";
        },
            'selected_language' => function($args) {
          return $args[0] == $args[1] ? "active-language" : "";
        },
            'language_name' => function($args) {
          $labels = $args[0];
          $language = $args[1];
          return isset($labels[$language]) ? $labels[$language] : $language;
        },
),
        'blockhelpers' => array(),
        'hbhelpers' => array(),
        'partials' => array('head_public' => function ($cx, $in, $sp) {return ''.$sp.'<meta charset="utf-8">
'.$sp.'<title>'.htmlentities((string)((isset($in['page']['title']) && is_array($in['page'])) ? $in['page']['title'] : null), ENT_QUOTES, 'UTF-8').'</title>
'.$sp.'<meta name="viewport" content="width=device-width, user-scalable=no">
'.$sp.'<link rel="stylesheet" href="'.htmlentities((string)((isset($in['page']['web']) && is_array($in['page'])) ? $in['page']['web'] : null), ENT_QUOTES, 'UTF-8').'/css/public.css" />
';},'admin_bar' => function ($cx, $in, $sp) {return ''.$sp.''.(($cx['funcs']['ifvar']($cx, ((isset($in['page']['user_data']['roles']['administrator_role']) && is_array($in['page']['user_data']['roles'])) ? $in['page']['user_data']['roles']['administrator_role'] : null))) ? '  <nav class="admin-bar">
'.$sp.'    <i class="fa fa-cog fa-2x vertical-align-middle margin-right-10"></i>
'.$sp.'    <span class="admin-title">'.htmlentities((string)((isset($in['labels']['administration']) && is_array($in['labels'])) ? $in['labels']['administration'] : null), ENT_QUOTES, 'UTF-8').'</span>
'.$sp.'    <ul class="admin-navigation">
'.$sp.'      <li>
'.$sp.'        <select class="form-control customer-selector dark-selector" id="admin_customer">
'.$sp.''.$cx['funcs']['sec']($cx, ((isset($in['page']['customers']) && is_array($in['page'])) ? $in['page']['customers'] : null), $in, false, function($cx, $in)use($sp){return '            <option value="'.htmlentities((string)((isset($in['customers']['id']) && is_array($in['customers'])) ? $in['customers']['id'] : null), ENT_QUOTES, 'UTF-8').'" '.$cx['funcs']['ch']($cx, 'select_equals', array(array(((isset($in['customers']['id']) && is_array($in['customers'])) ? $in['customers']['id'] : null),((isset($cx['sp_vars']['root']['page']['impersonated_customer']) && is_array($cx['sp_vars']['root']['page'])) ? $cx['sp_vars']['root']['page']['impersonated_customer'] : null)),array()), 'encq').'>'.htmlentities((string)((isset($in['customers']['name']) && is_array($in['customers'])) ? $in['customers']['name'] : null), ENT_QUOTES, 'UTF-8').'</option>
'.$sp.'';}).'        </select>
'.$sp.'      </li>
'.$sp.'    </ul>
'.$sp.'  </nav>
'.$sp.'' : '').'';},'flash' => function ($cx, $in, $sp) {return ''.$sp.''.(($cx['funcs']['ifvar']($cx, ((isset($in['page']['debug']) && is_array($in['page'])) ? $in['page']['debug'] : null))) ? '<div class="debug">
'.$sp.'  '.htmlentities((string)((isset($in['page']['debug']) && is_array($in['page'])) ? $in['page']['debug'] : null), ENT_QUOTES, 'UTF-8').'
'.$sp.'</div>
'.$sp.'' : '').'
'.$sp.''.(($cx['funcs']['ifvar']($cx, ((isset($in['page']['flash']) && is_array($in['page'])) ? $in['page']['flash'] : null))) ? '<div class="flash '.htmlentities((string)((isset($in['page']['flash']['code']) && is_array($in['page']['flash'])) ? $in['page']['flash']['code'] : null), ENT_QUOTES, 'UTF-8').'">
'.$sp.'  '.htmlentities((string)((isset($in['page']['flash']['message']) && is_array($in['page']['flash'])) ? $in['page']['flash']['message'] : null), ENT_QUOTES, 'UTF-8').'
'.$sp.'</div>
'.$sp.'' : '').'';},'page_hiddens' => function ($cx, $in, $sp) {return ''.$sp.'<input type="hidden" id="host" value="'.htmlentities((string)((isset($in['page']['host']) && is_array($in['page'])) ? $in['page']['host'] : null), ENT_QUOTES, 'UTF-8').'" />
';},'language_selector' => function ($cx, $in, $sp) {return ''.$sp.'<ul class="pull-left languages">
'.$sp.''.$cx['funcs']['sec']($cx, ((isset($in['page']['languages']) && is_array($in['page'])) ? $in['page']['languages'] : null), $in, false, function($cx, $in)use($sp){return '    <li>
'.$sp.'      <a href="'.htmlentities((string)((isset($cx['sp_vars']['root']['page']['host']) && is_array($cx['sp_vars']['root']['page'])) ? $cx['sp_vars']['root']['page']['host'] : null), ENT_QUOTES, 'UTF-8').'/language/'.htmlentities((string)$in, ENT_QUOTES, 'UTF-8').'" class="'.$cx['funcs']['ch']($cx, 'selected_language', array(array($in,((isset($cx['sp_vars']['root']['page']['language']) && is_array($cx['sp_vars']['root']['page'])) ? $cx['sp_vars']['root']['page']['language'] : null)),array()), 'encq').'" data-language-selector>'.$cx['funcs']['ch']($cx, 'language_name', array(array(((isset($cx['sp_vars']['root']['labels']) && is_array($cx['sp_vars']['root'])) ? $cx['sp_vars']['root']['labels'] : null),$in),array()), 'encq').'</a>
'.$sp.'    </li>
'.$sp.'';}).'</ul>
';},'header_public' => function ($cx, $in, $sp) {return ''.$sp.''.$cx['funcs']['p']($cx, 'admin_bar', array(array($in),array())).''.$cx['funcs']['p']($cx, 'flash', array(array($in),array())).'
'.$sp.''.$cx['funcs']['p']($cx, 'page_hiddens', array(array($in),array())).'
'.$sp.'<nav class="container text-right padding-top-15">
'.$sp.''.$cx['funcs']['p']($cx, 'language_selector', array(array($in),array()), '  ').'  <a href="'.htmlentities((string)((isset($in['page']['host']) && is_array($in['page'])) ? $in['page']['host'] : null), ENT_QUOTES, 'UTF-8').'/'.htmlentities((string)((isset($in['page']['language']) && is_array($in['page'])) ? $in['page']['language'] : null), ENT_QUOTES, 'UTF-8').'/login">'.htmlentities((string)((isset($in['labels']['login']) && is_array($in['labels'])) ? $in['labels']['login'] : null), ENT_QUOTES, 'UTF-8').'</a>
'.$sp.'</nav>
';},'footer_public' => function ($cx, $in, $sp) {return ''.$sp.'<script src="'.htmlentities((string)((isset($in['page']['web']) && is_array($in['page'])) ? $in['page']['web'] : null), ENT_QUOTES, 'UTF-8').'/js/jquery-2.1.4.min.js?'.htmlentities((string)((isset($in['page']['version']) && is_array($in['page'])) ? $in['page']['version'] : null), ENT_QUOTES, 'UTF-8').'"></script>
'.$sp.''.(($cx['funcs']['ifvar']($cx, ((isset($in['page']['user_data']['roles']['administrator_role']) && is_array($in['page']['user_data']['roles'])) ? $in['page']['user_data']['roles']['administrator_role'] : null))) ? '  <script src="'.htmlentities((string)((isset($in['page']['web']) && is_array($in['page'])) ? $in['page']['web'] : null), ENT_QUOTES, 'UTF-8').'/js/admin_bar.js?'.htmlentities((string)((isset($in['page']['version']) && is_array($in['page'])) ? $in['page']['version'] : null), ENT_QUOTES, 'UTF-8').'"></script>
'.$sp.'' : '').'<script src="'.htmlentities((string)((isset($in['page']['web']) && is_array($in['page'])) ? $in['page']['web'] : null), ENT_QUOTES, 'UTF-8').'/js/language.js?'.htmlentities((string)((isset($in['page']['version']) && is_array($in['page'])) ? $in['page']['version'] : null), ENT_QUOTES, 'UTF-8').'"></script>
';},),
        'scopes' => array(),
        'sp_vars' => array('root' => $in),
        'lcrun' => 'LCRun3',
'funcs' => array(
    'ifvar' => function ($cx, $v) {
        return !is_null($v) && ($v !== false) && ($v !== 0) && ($v !== 0.0) && ($v !== '') && (is_array($v) ? (count($v) > 0) : true);
    },
    'sec' => function ($cx, $v, $in, $each, $cb, $else = null) {
        $isAry = is_array($v) || ($v instanceof ArrayObject);
        $isTrav = $v instanceof Traversable;
        $loop = $each;
        $keys = null;
        $last = null;
        $isObj = false;

        if ($isAry && $else !== null && count($v) === 0) {
            $cx['scopes'][] = $in;
            $ret = $else($cx, $in);
            array_pop($cx['scopes']);
            return $ret;
        }

        // #var, detect input type is object or not
        if (!$loop && $isAry) {
            $keys = array_keys($v);
            $loop = (count(array_diff_key($v, array_keys($keys))) == 0);
            $isObj = !$loop;
        }

        if (($loop && $isAry) || $isTrav) {
            if ($each && !$isTrav) {
                // Detect input type is object or not when never done once
                if ($keys == null) {
                    $keys = array_keys($v);
                    $isObj = (count(array_diff_key($v, array_keys($keys))) > 0);
                }
            }
            $ret = array();
            $cx['scopes'][] = $in;
            $i = 0;
            if ($cx['flags']['spvar']) {
                $old_spvar = $cx['sp_vars'];
                $cx['sp_vars'] = array(
                    '_parent' => $old_spvar,
                    'root' => $old_spvar['root'],
                );
                if (!$isTrav) {
                    $last = count($keys) - 1;
                }
            }
            foreach ($v as $index => $raw) {
                if ($cx['flags']['spvar']) {
                    $cx['sp_vars']['first'] = ($i === 0);
                    $cx['sp_vars']['last'] = ($i == $last);
                    $cx['sp_vars']['key'] = $index;
                    $cx['sp_vars']['index'] = $i;
                    $i++;
                }
                $ret[] = $cb($cx, $raw);
            }
            if ($cx['flags']['spvar']) {
                if ($isObj) {
                    unset($cx['sp_vars']['key']);
                } else {
                    unset($cx['sp_vars']['last']);
                }
                unset($cx['sp_vars']['index']);
                unset($cx['sp_vars']['first']);
                $cx['sp_vars'] = $old_spvar;
            }
            array_pop($cx['scopes']);
            return join('', $ret);
        }
        if ($each) {
            if ($else !== null) {
                $cx['scopes'][] = $in;
                $ret = $else($cx, $v);
                array_pop($cx['scopes']);
                return $ret;
            }
            return '';
        }
        if ($isAry) {
            $cx['scopes'][] = $in;
            $ret = $cb($cx, $v);
            array_pop($cx['scopes']);
            return $ret;
        }

        if ($v === true) {
            return $cb($cx, $in);
        }

        if (!is_null($v) && ($v !== false)) {
            return $cb($cx, $v);
        }

        if ($else !== null) {
            $cx['scopes'][] = $in;
            $ret = $else($cx, $in);
            array_pop($cx['scopes']);
            return $ret;
        }

        return '';
    },
    'ch' => function ($cx, $ch, $vars, $op) {
        return $cx['funcs']['chret'](call_user_func_array($cx['helpers'][$ch], $vars), $op);
    },
    'p' => function ($cx, $p, $v, $sp = '') {
        $param = $v[0][0];

        if (is_array($v[1])) {
            if (is_array($v[0][0])) {
                $param = array_merge($v[0][0], $v[1]);
            } else if (($cx['flags']['method'] || $cx['flags']['prop']) && is_object($v[0][0])) {
                foreach ($v[1] as $i => $v) {
                    $param->$i = $v;
                }
            }
        }

        return call_user_func($cx['partials'][$p], $cx, $param, $sp);
    },
    'chret' => function ($ret, $op) {
        if (is_array($ret)) {
            if (isset($ret[1]) && $ret[1]) {
                $op = $ret[1];
            }
            $ret = $ret[0];
        }

        switch ($op) {
            case 'enc':
                return htmlentities($ret, ENT_QUOTES, 'UTF-8');
            case 'encq':
                return preg_replace('/&#039;/', '&#x27;', htmlentities($ret, ENT_QUOTES, 'UTF-8'));
        }
        return $ret;
    },
)

    );
    
    return '<!DOCTYPE HTML>
<html>
  <head>
'.$cx['funcs']['p']($cx, 'head_public', array(array($in),array()), '    ').'  </head>
  <body>
    <main class="app-body">
'.$cx['funcs']['p']($cx, 'header_public', array(array($in),array()), '      ').'      <section class="app-container">
        <div class="container margin-top-20">
  <section class="content-body">

    <div class="jumbotron">
      <h1 class="margin-bottom-30">'.htmlentities((string)((isset($in['labels']['login']) && is_array($in['labels'])) ? $in['labels']['login'] : null), ENT_QUOTES, 'UTF-8').'</h1>
      <form method="POST" action="'.htmlentities((string)((isset($in['page']['host']) && is_array($in['page'])) ? $in['page']['host'] : null), ENT_QUOTES, 'UTF-8').'/login">
        <div class="form-group">
          <label for="user">'.htmlentities((string)((isset($in['labels']['user_account']) && is_array($in['labels'])) ? $in['labels']['user_account'] : null), ENT_QUOTES, 'UTF-8').'</label>
          <input type="text" class="form-control" name="user" placeholder="" />
        </div>
        <div class="form-group">
          <label for="password">'.htmlentities((string)((isset($in['labels']['password']) && is_array($in['labels'])) ? $in['labels']['password'] : null), ENT_QUOTES, 'UTF-8').'</label>
          <input type="password" class="form-control" name="password" placeholder="" />
        </div>
        <p class="text-right">
          <input type="submit" value="'.htmlentities((string)((isset($in['labels']['send']) && is_array($in['labels'])) ? $in['labels']['send'] : null), ENT_QUOTES, 'UTF-8').'" class="btn btn-primary" />
        </p>
      </form>
    </div>

  </section>
</div>

      </section>
    </main>
'.$cx['funcs']['p']($cx, 'footer_public', array(array($in),array()), '    ').'  </body>
</html>
';
}
?>